# Setup GT.M
#  Running path, containing M source code.
if [ -n "$gtmdir" ] ; then
        echo "Using gtmdir : $gtmdir"
else
        export gtmdir=`readlink -e "$PWD/\`dirname $0\`/.."`
fi
#  Version used
export gtmver="V6.0-001_x86_64"
#  Install path
export gtm_dist="/usr/lib/fis-gtm/$gtmver"
#  Temporary directory
export gtm_tmp="/tmp/fis-gtm/$gtmver"
#  Log directory
export gtm_log="/var/log/databallet"
#  Principal editing
export gtm_principal_editing="EDITING"
#  Prompt
export gtm_prompt="DataBallet>"
#  Global directory
export gtmgbldir="$gtmdir/$gtmver/g/gtm.gld"
#  M routines
export gtmroutines="$gtmdir/$gtmver/o($gtmdir/$gtmver/r $gtmdir/r) $gtm_dist/plugin/o($gtm_dist/plugin/r) $gtm_dist/libgtmshr.so $gtm_dist"

# Create directories, if needed
mkdir -p $gtmdir/$gtmver/r $gtmdir/$gtmver/g $gtmdir/$gtmver/o $gtm_tmp $gtm_log

# PID file location
#  Default value : With GT.M's log files.
export pid="$gtm_log/databallet.pid"

# SCRIPT log file location
#  Default value : With GT.M's log files.
export log="$gtm_log/databallet_script.log"

# Maximum record size for ^CACHE, used for content split across records.
export cache_rec_size=1048576

# DataBallet configuration
cat > $gtmdir/$gtmver/r/userconf.m << EOF
userconf;
        ; Server string.
        ;  Use "min" for "DataBallet", or "full" for "DataBallet-<version> (<$zversion>)" (ex. : "DataBallet-20120606 (GT.M V5.5-000 Linux x86)").
        ;  Any other string will default to "min".
        set conf("serverstring")="full"
        ; Listening port
        set conf("listenon","http")=80
        set conf("listenon","https")=443
        ; Default document name
        set conf("index")="index.html"
        ; Error log file
        set conf("errorlog")="$gtm_log/databallet_error.log"
        ; Common Log Format file
        set conf("log")="$gtm_log/databallet_access.log"
        ; Extended Log Format file
        set conf("extlog")="$gtm_log/databallet_extended.log"
        ; Cache maxicum record size
        set conf("cacherecsize")=${cache_rec_size}
        ;
        ; Global configuration
        ;
        set TMP="^TMP"
        set CACHE="^CACHE"
        set SESSION="^SESSION"
        ;
        ; Routing configuration
        ;
        set conf("routing","DATABALLET.COM","/")="do handle^template(""/home/laurent/databallet/"")"
        set conf("routing","DATABALLET.COM","/news/")="do handle^news(""/home/laurent/databallet/"",""/news/"")"
        set conf("routing","DATABALLET.COM","/auth/")="do handle^auth(""/home/laurent/databallet/"",""/auth/"")"
        set conf("routing","WWW.DATABALLET.COM","/")="do handle^template(""/home/laurent/databallet/"")"
        set conf("routing","WWW.DATABALLET.COM","/news/")="do handle^news(""/home/laurent/databallet/"",""/news/"")"
        set conf("routing","WWW.DATABALLET.COM","/auth/")="do handle^auth(""/home/laurent/databallet/"",""/auth/"")"
        ; update news when new code commited to github
        set conf("routing","WWW.DATABALLET.COM","/7107f9f3a81e8af7a40f2b8e1fe51e45e026b30a1bdaf4628d2f5270/")="do handle^githubnews()"
        ; route everything else to the bottomless pit
        set conf("routing","*","/")="do handle^static(""/dev/null"")"
EOF

# Setup and create the database if it does not exist
if [ ! -f $gtmgbldir ] ; then
        $gtm_dist/mumps -run GDE >> $log 2>&1 << EOF
change -segment DEFAULT -block_size=4096 -allocation=1000 -noencryption -extension_count=1000 -global_buffer_count=1000 -access_method=BG -lock_space=10 -reserved_bytes=0 -file_name=$gtmdir/$gtmver/g/gtm.dat
add -segment CACHE -block_size=4096 -allocation=200 -noencryption -extension_count=100 -access_method=BG -lock_space=10 -reserved_bytes=0 -file_name=$gtmdir/$gtmver/g/cache.dat
add -segment TMP -block_size=512 -allocation=200 -noencryption -extension_count=100 -access_method=BG -lock_space=10 -reserved_bytes=0 -file_name=$gtmdir/$gtmver/g/tmp.dat
change -region DEFAULT -dynamic_segment=DEFAULT -key_size=255 -record_size=1048576 -journal=(before,file="$gtmdir/$gtmver/g/gtm.mjl") -nonull_subscripts
add -region CACHE -dynamic_segment=CACHE -key_size=255 -record_size=${cache_rec_size} -nojournal -nonull_subscripts
add -region TMP -dynamic_segment=TMP -key_size=255 -record_size=496 -nojournal -nonull_subscripts
add -name CACHE -region=CACHE
add -name TMP -region=TMP
EOF
        $gtm_dist/mupip create >> $log 2>&1
fi
